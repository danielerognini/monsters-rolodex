{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACnE,mCAAgCL,EAAMG,QAAQG,KAA9C,MAAUN,EAAMG,QAAQC,IACxB,kCAAMJ,EAAMG,QAAQI,MAApB,WCHKC,G,MAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACMD,EAAMS,SAASC,KAAK,SAAAP,GAAO,OAAM,cAAC,EAAD,CAAyBA,QAAUA,GAAvBA,EAAQC,WCJtDO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,aACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC6CJG,E,kDAhDd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZR,SAAU,GACVS,YAAa,IAGd,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBAPP,E,qDAUd,WAAqB,IAAD,OACnBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAG1C,SAAaE,GACZC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGvC,WAAS,MAG0BF,KAAKV,MAA/BR,EAHA,EAGAA,SAAUS,EAHV,EAGUA,YAQZY,EAAmBrB,EAASsB,QACjC,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASf,EAAYc,kBAG5D,OACC,sBAAK/B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAcc,KAAKd,eAEpB,cAAC,EAAD,CAAUJ,SAAWqB,W,GA3CPI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.d24d7411.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.css'\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\" />\r\n        <h2 key={ props.monster.id }> { props.monster.name } </h2>\r\n        <p> { props.monster.email } </p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card';\r\n\r\nimport './card-list.css';\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            { props.monsters.map( monster => ( <Card key={ monster.id } monster={ monster } /> ) ) }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './search-box.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className=\"search-box\"\r\n        type=\"search\" \r\n        placeholder={ placeholder } \r\n        onChange={ handleChange }\r\n    />\r\n)","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.jsx';\nimport { SearchBox } from './components/search-box/search-box.js';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ monsters: users }));\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ searchField: e.target.value });\n\t}\n\n\trender() {\n\n\t\t//destructuring the state in constants\n\t\tconst { monsters, searchField } = this.state;\n\t\t\t/*\n\t\t\t* The code above is the equivalent of:\n\t\t\t* const monsters = this.state.monsters;\n\t\t\t* const searchField = this.state.searchfield\n\t\t\t*/\n\n\t\t//filtering the monsters\n\t\tconst filteredMonsters = monsters.filter(\n\t\t\tmonster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn(\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox \n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={ filteredMonsters }/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}